<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <title>Lehrling Kontakte - Modern Responsive UI</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    /* Farbvariablen & Grundeinstellungen */
    :root {
      --primary: #009999;
      --primary-dark: #006B69;
      --accent: #00A6A6;
      --bg: #F0F4F8;
      --white: #FFF;
      --text: #333;
      --card-bg: rgba(255, 255, 255, 0.95);
      --shadow: rgba(0, 0, 0, 0.15);
    }
    * {
      box-sizing: border-box;
    }
    html, body {
      margin: 0;
      padding: 0;
      font-family: 'Helvetica Neue', Arial, sans-serif;
      background: var(--bg);
      color: var(--text);
      line-height: 1.6;
      overflow-x: hidden;
    }

    /* Fixierter moderner Header */
    header {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      background: linear-gradient(135deg, var(--primary), var(--accent));
      padding: 20px;
      text-align: center;
      z-index: 100;
      box-shadow: 0 4px 8px var(--shadow);
    }
    header h1 {
      margin: 0;
      font-size: 2rem;
      color: var(--white);
    }

    /* Hauptbereich (Abstand zum Header) */
    main {
      margin-top: 100px;
      padding: 20px;
      max-width: 1200px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Suchleiste */
    .search-container {
      text-align: center;
      margin-bottom: 40px;
    }
    .search-container input {
      width: 350px;
      max-width: 90%;
      padding: 14px 20px;
      border: none;
      border-radius: 30px;
      box-shadow: 0 2px 8px var(--shadow);
      font-size: 1rem;
      outline: none;
      transition: box-shadow 0.3s ease;
    }
    .search-container input:focus {
      box-shadow: 0 4px 16px var(--shadow);
    }

    /* Kartenlayout (responsive Grid) */
    .card-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 20px;
    }
    .card {
      background: var(--card-bg);
      border-radius: 16px;
      padding: 20px;
      box-shadow: 0 4px 12px var(--shadow);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      cursor: pointer;
    }
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 20px var(--shadow);
    }
    .card-header {
      display: flex;
      align-items: center;
      margin-bottom: 16px;
    }
    .card-header img {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      object-fit: cover;
      margin-right: 16px;
      border: 2px solid var(--primary);
    }
    .card-header h2 {
      margin: 0;
      font-size: 1.25rem;
      color: var(--primary-dark);
    }
    .card-body {
      font-size: 0.95rem;
      color: var(--text);
    }
    .card-body p {
      margin: 4px 0;
    }

    /* Modernes Modal */
    .modal {
      display: none;
      position: fixed;
      inset: 0;
      background: rgba(0, 0, 0, 0.5);
      align-items: center;
      justify-content: center;
      z-index: 200;
      padding: 20px;
    }
    .modal-content {
      background: var(--white);
      border-radius: 16px;
      max-width: 500px;
      width: 100%;
      padding: 30px;
      position: relative;
      box-shadow: 0 4px 16px var(--shadow);
      animation: fadeIn 0.3s ease;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: scale(0.95); }
      to { opacity: 1; transform: scale(1); }
    }
    .modal .close {
      position: absolute;
      top: 15px;
      right: 15px;
      font-size: 1.5rem;
      color: var(--primary-dark);
      cursor: pointer;
    }

    /* Detailansicht im Modal */
    .modal-details {
      margin-top: 20px;
    }
    .modal-details .detail-row {
      margin-bottom: 12px;
      display: flex;
      justify-content: space-between;
      border-bottom: 1px solid #eee;
      padding-bottom: 6px;
    }
    .modal-details .detail-row span:first-child {
      font-weight: 600;
      color: var(--primary);
    }
    .modal-details .detail-row span:last-child {
      flex: 1;
      text-align: right;
      margin-left: 10px;
    }
    .modal-buttons {
      margin-top: 20px;
      text-align: center;
    }
    .modal-buttons button {
      background: var(--primary);
      color: var(--white);
      border: none;
      padding: 12px 20px;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      margin: 0 8px;
      transition: background 0.3s ease;
    }
    .modal-buttons button:hover {
      background: var(--primary-dark);
    }
    
    /* Editiermodus im Modal */
    .modal-edit input {
      width: 100%;
      padding: 10px;
      margin: 8px 0;
      border: 1px solid #ccc;
      border-radius: 6px;
      font-size: 1rem;
    }
    
    /* Zusätzliche responsive Anpassungen */
    @media (max-width: 768px) {
      header h1 {
        font-size: 1.75rem;
      }
      .card-header h2 {
        font-size: 1.15rem;
      }
      .modal-content {
        padding: 20px;
      }
    }
    @media (max-width: 480px) {
      header {
        padding: 15px;
      }
      header h1 {
        font-size: 1.5rem;
      }
      .search-container input {
        width: 90%;
        padding: 12px 16px;
      }
      .card {
        padding: 16px;
      }
      .modal-content {
        padding: 15px;
      }
    }
  </style>
</head>
<body>

  <!-- Header -->
  <header>
    <h1>Lehrling Kontakte</h1>
  </header>

  <main>
    <div class="search-container">
      <input type="text" id="searchInput" placeholder="Suche nach Namen, E-Mail oder Telefon..." oninput="filterCards()">
    </div>
    <div class="card-grid" id="cardGrid">
      <!-- Dynamische Karten werden hier eingefügt -->
    </div>
  </main>

  <!-- Modal: Detailansicht & Bearbeitung -->
  <div class="modal" id="detailModal">
    <div class="modal-content">
      <span class="close" onclick="closeModal()">&times;</span>
      
      <!-- Detailansicht -->
      <div id="detailView">
        <div style="text-align: center;">
          <img id="modalProfilBild" src="" alt="Profilbild" style="width:120px; height:120px; border-radius:50%; object-fit:cover; border: 3px solid var(--primary);">
        </div>
        <div class="modal-details" id="modalDetails">
          <!-- Dynamische Detailzeilen (Vorname, Nachname, E-Mail, Telefon etc.) -->
        </div>
        <div class="modal-buttons" id="modalButtons">
          <button onclick="switchToEditMode()">Bearbeiten</button>
        </div>
      </div>
      
      <!-- Editiermodus (initial versteckt) -->
      <div id="modalEdit" class="modal-edit" style="display:none;">
        <div style="margin-bottom: 20px;">
          <input type="text" id="editProfilBild" placeholder="Profilbild URL">
          <input type="text" id="editVorname" placeholder="Vorname">
          <input type="text" id="editNachname" placeholder="Nachname">
          <input type="text" id="editMailPrivat" placeholder="E-Mail Privat">
          <input type="text" id="editMailFirma" placeholder="E-Mail Firma">
          <input type="text" id="editTelefon" placeholder="Telefon">
          <input type="text" id="editStrasse" placeholder="Strasse">
          <input type="text" id="editStadt" placeholder="Stadt">
          <input type="text" id="editPlz" placeholder="PLZ">
          <input type="text" id="editKanton" placeholder="Kanton">
          <input type="text" id="editGeburtsdatum" placeholder="Geburtsdatum">
        </div>
        <div class="modal-buttons">
          <button onclick="saveChanges()">Speichern</button>
          <button onclick="switchToDetailView()">Abbrechen</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Airtable-Konfiguration – bitte hier mit deinen Werten ersetzen!
    const airtableApiKey = 'patpHKb3dn8bOnscO.07f23adbba635e29713219dafa0264ecaad9c83da1e5d2c7c9dab1318b01c79e';
    const baseId = 'appo91rayl20qwyWe';
    const tableName = 'Lehrlinge';

    let currentRecord = null;
    let currentRecordId = null;

    // Daten abrufen und Karten erstellen
    fetch(`https://api.airtable.com/v0/${baseId}/${encodeURIComponent(tableName)}?view=Grid%20view`, {
      headers: { Authorization: `Bearer ${airtableApiKey}` }
    })
    .then(response => response.json())
    .then(data => {
      const cardGrid = document.getElementById('cardGrid');
      data.records.forEach(record => {
        const fields = record.fields;
        // Erstelle eine Karte mit Profilbild, Namen, E-Mail Privat und Telefon
        const card = document.createElement('div');
        card.className = 'card';
        card.innerHTML = `
          <div class="card-header">
            <img class="profile-img" src="${fields.ProfilBild || ''}" alt="Profilbild">
            <h2>${fields.Vorname || ''} ${fields.Nachname || ''}</h2>
          </div>
          <div class="card-body">
            <p><strong>E-Mail:</strong> ${fields['E-Mail_Privat'] || ''}</p>
            <p><strong>Telefon:</strong> ${fields.Telefon || ''}</p>
          </div>
        `;
        card.addEventListener('click', () => openDetailModal(record));
        cardGrid.appendChild(card);
      });
    })
    .catch(error => console.error('Fehler beim Abrufen der Daten:', error));

    // Öffnet das Modal und füllt die Detailansicht
    function openDetailModal(record) {
      currentRecord = record;
      currentRecordId = record.id;
      const fields = record.fields;
      
      // Setze Bild (falls vorhanden)
      const modalProfilBild = document.getElementById('modalProfilBild');
      if(modalProfilBild) {
        modalProfilBild.src = fields.ProfilBild || '';
      }
      
      // Detailzeilen erzeugen
      const details = [
        { label: 'Vorname', value: fields.Vorname || '' },
        { label: 'Nachname', value: fields.Nachname || '' },
        { label: 'E-Mail Privat', value: fields['E-Mail_Privat'] || '' },
        { label: 'E-Mail Firma', value: fields['E-Mail_Firma'] || '' },
        { label: 'Telefon', value: fields.Telefon || '' },
        { label: 'Strasse', value: fields.Strasse || '' },
        { label: 'Stadt', value: fields.Stadt || '' },
        { label: 'PLZ', value: fields.PLZ || '' },
        { label: 'Kanton', value: fields.Kanton || '' },
        { label: 'Geburtsdatum', value: fields.Geburtsdatum || '' }
      ];
      const modalDetails = document.getElementById('modalDetails');
      if(modalDetails) {
        modalDetails.innerHTML = '';
        details.forEach(detail => {
          const row = document.createElement('div');
          row.className = 'detail-row';
          row.innerHTML = `<span>${detail.label}:</span><span>${detail.value}</span>`;
          modalDetails.appendChild(row);
        });
      }
      
      // Zeige Detailansicht, verstecke Editiermodus
      document.getElementById('detailView').style.display = 'block';
      document.getElementById('modalEdit').style.display = 'none';
      document.getElementById('detailModal').style.display = 'flex';
    }
    
    // Schließt das Modal
    function closeModal() {
      document.getElementById('detailModal').style.display = 'none';
    }
    
    // Wechsel in den Editiermodus
    function switchToEditMode() {
      const fields = currentRecord.fields;
      document.getElementById('editProfilBild').value = fields.ProfilBild || '';
      document.getElementById('editVorname').value = fields.Vorname || '';
      document.getElementById('editNachname').value = fields.Nachname || '';
      document.getElementById('editMailPrivat').value = fields['E-Mail_Privat'] || '';
      document.getElementById('editMailFirma').value = fields['E-Mail_Firma'] || '';
      document.getElementById('editTelefon').value = fields.Telefon || '';
      document.getElementById('editStrasse').value = fields.Strasse || '';
      document.getElementById('editStadt').value = fields.Stadt || '';
      document.getElementById('editPlz').value = fields.PLZ || '';
      document.getElementById('editKanton').value = fields.Kanton || '';
      document.getElementById('editGeburtsdatum').value = fields.Geburtsdatum || '';
      
      // Umschalten: Detailansicht ausblenden, Editiermodus anzeigen
      document.getElementById('detailView').style.display = 'none';
      document.getElementById('modalEdit').style.display = 'block';
    }
    
    // Zurück zur Detailansicht
    function switchToDetailView() {
      document.getElementById('modalEdit').style.display = 'none';
      document.getElementById('detailView').style.display = 'block';
    }
    
    // Speichert Änderungen via PATCH an Airtable
    function saveChanges() {
      const updatedFields = {
        ProfilBild: document.getElementById('editProfilBild').value,
        Vorname: document.getElementById('editVorname').value,
        Nachname: document.getElementById('editNachname').value,
        'E-Mail_Privat': document.getElementById('editMailPrivat').value,
        'E-Mail_Firma': document.getElementById('editMailFirma').value,
        Telefon: document.getElementById('editTelefon').value,
        Strasse: document.getElementById('editStrasse').value,
        Stadt: document.getElementById('editStadt').value,
        PLZ: document.getElementById('editPlz').value,
        Kanton: document.getElementById('editKanton').value,
        Geburtsdatum: document.getElementById('editGeburtsdatum').value
      };

      fetch(`https://api.airtable.com/v0/${baseId}/${encodeURIComponent(tableName)}/${currentRecordId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${airtableApiKey}`
        },
        body: JSON.stringify({ fields: updatedFields })
      })
      .then(response => response.json())
      .then(updatedRecord => {
        console.log('Datensatz aktualisiert:', updatedRecord);
        closeModal();
        location.reload();
      })
      .catch(error => console.error('Fehler beim Aktualisieren der Daten:', error));
    }
    
    // Suchfunktion: Filtert die Karten anhand des eingegebenen Textes
    function filterCards() {
      const input = document.getElementById('searchInput').value.toLowerCase();
      const cards = document.getElementsByClassName('card');
      Array.from(cards).forEach(card => {
        card.style.display = card.innerText.toLowerCase().includes(input) ? 'block' : 'none';
      });
    }
  </script>
</body>
</html>
